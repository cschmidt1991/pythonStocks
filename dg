[33mcommit 6c4d371d9c39722d852ac07dfdd5af45edf14406[m
Author: duffbuster <colin@fishbrains.com>
Date:   Thu Mar 20 19:23:43 2014 -0400

    change name to server.py

[1mdiff --git a/script.py b/script.py[m
[1mdeleted file mode 100644[m
[1mindex c7d003e..0000000[m
[1m--- a/script.py[m
[1m+++ /dev/null[m
[36m@@ -1,87 +0,0 @@[m
[31m-from flask import Flask, session, render_template, request, redirect, url_for, [m
[31m-[m
[31m-import utils, stockTickers, ystockquote[m
[31m-app = Flask(__name__)[m
[31m-[m
[31m-app.secret_key = 'Zq4oA4Dqq3'[m
[31m-[m
[31m-# Homepage: search for stocks and get current price[m
[31m-@app.route('/', methods=['GET', 'POST'])[m
[31m-def mainIndex():[m
[31m-    ticker = request.form['symbol'][m
[31m-    stockPrice = ystockquote.get_price(ticker)[m
[31m-    [m
[31m-    return render_template('index.html', selectedMenu='Home', stockPrice=stockPrice)[m
[31m-[m
[31m-# Stockreport only shows stuff it you're logged in[m
[31m-# If not logged in displays message[m
[31m-@app.route('/stockReport', methods=['GET'])[m
[31m-def stockReport():[m
[31m-    db = utils.db_connect()[m
[31m-    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[31m-    [m
[31m-    # if user is logged in[m
[31m-    if 'username' in session:[m
[31m-        # update stocks then...[m
[31m-            # to update, get array of tickers and use a for loop to iterate through and update the price of each one[m
[31m-        # display stocks[m
[31m-    else:[m
[31m-        # return to home[m
[31m-        return redirect(url_for('mainIndex'))[m
[31m-    [m
[31m-    return redirect(url_for('stocklist'))                                          [m
[31m-[m
[31m-[m
[31m-@app.route('/login', methods=['GET', 'POST'])[m
[31m-def login():[m
[31m-    db = utils.db_connect()[m
[31m-    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[31m-    if request.method == 'POST':[m
[31m-        print "Logging in..."[m
[31m-        loginUser = request.form['username'][m
[31m-        pw = request.form['password'][m
[31m-        query = "SELECT * FROM users WHERE username = '%s' AND password = SHA2('%s', 0)" % (loginUser, pw)[m
[31m-        cur.execute(query)[m
[31m-        [m
[31m-        if cur.fetchone():[m
[31m-            session['username'] = loginUser[m
[31m-            pw = ''[m
[31m-            return redirect(url_for('mainIndex'))[m
[31m-        else:[m
[31m-            error = 'Username and password do not match!'[m
[31m-        [m
[31m-        if 'username' in session:[m
[31m-            return render_template('login.html', selectedMenu='Login', username=session['username'])[m
[31m-        return render_template('login.html', selectedMenu='Login')[m
[31m-[m
[31m-@app.route('/newUser', methods=['GET', 'POST'])[m
[31m-def newUser():[m
[31m-    db = utils.db_connect()[m
[31m-    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[31m-    if request.method == 'POST':[m
[31m-        print "Creating new user..."[m
[31m-        session['username'] = request.form['username'][m
[31m-        newPw = request.form['password'][m
[31m-        [m
[31m-        newQuery = "INSERT INTO users (username, password) VALUES('" + session['username'] + "', SHA2('" + newPw + "', 0))"[m
[31m-        query = "SELECT * FROM users WHERE username = '%s' AND password = SHA2('%s', 0)" % (session['username'], newPw)[m
[31m-        print newQuery[m
[31m-        cur.execute(newQuery)[m
[31m-        cur.execute(query)[m
[31m-        if cur.fetchone():[m
[31m-            return redirect(url_for('mainIndex'))[m
[31m-    [m
[31m-    if 'username' in session:[m
[31m-        return render_template('newUser.html', selectedMenu='New User', username=session['username'])[m
[31m-    return render_templage('newUser.html', selectedMenu='New User')[m
[31m-[m
[31m-@app.route('/logout', methods=['GET', 'POST'])[m
[31m-def logout():[m
[31m-    session.pop('username', None)[m
[31m-    session.pop('zip', None)[m
[31m-    print 'You were logged out'[m
[31m-    return redirect(url_for('mainIndex'))[m
[31m-[m
[31m-if __name__ == '__main__':[m
[31m-	app.debug==True[m
[31m-	app.run(host='0.0.0.0',port=3000)[m
\ No newline at end of file[m
[1mdiff --git a/server.py b/server.py[m
[1mnew file mode 100644[m
[1mindex 0000000..daf2d82[m
[1m--- /dev/null[m
[1m+++ b/server.py[m
[36m@@ -0,0 +1,90 @@[m
[32m+[m[32mfrom flask import Flask, session, render_template, request, redirect, url_for[m[41m [m
[32m+[m
[32m+[m[32mimport utils, stockTickers, ystockquote[m
[32m+[m[32mapp = Flask(__name__)[m
[32m+[m
[32m+[m[32mapp.secret_key = 'Zq4oA4Dqq3'[m
[32m+[m
[32m+[m[32m# Homepage: search for stocks and get current price[m
[32m+[m[32m@app.route('/', methods=['GET', 'POST'])[m
[32m+[m[32mdef mainIndex():[m
[32m+[m[32m    ticker = request.form['symbol'][m
[32m+[m[32m    stockPrice = ystockquote.get_price(ticker)[m
[32m+[m[41m    [m
[32m+[m[32m    return render_template('index.html', selectedMenu='Home', stockPrice=stockPrice)[m
[32m+[m
[32m+[m[32m# TODO: addStock route[m
[32m+[m
[32m+[m[32m# Stockreport only shows stuff it you're logged in[m
[32m+[m[32m# If not logged in displays message[m
[32m+[m[32m@app.route('/stockReport', methods=['GET'])[m
[32m+[m[32mdef stockReport():[m
[32m+[m[32m    db = utils.db_connect()[m
[32m+[m[32m    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[32m+[m[41m    [m
[32m+[m[32m    # if user is logged in[m
[32m+[m[32m    if 'username' in session:[m
[32m+[m[32m        # update stocks then...[m
[32m+[m[32m            # to update, get array of tickers and use a for loop to iterate through and update the price of each one[m
[32m+[m[32m        # display stocks[m
[32m+[m	[32mprint "hello"[m
[32m+[m[32m    else:[m
[32m+[m	[32m# return to home[m
[32m+[m[32m        return redirect(url_for('mainIndex'))[m
[32m+[m[41m    [m
[32m+[m[32m    return redirect(url_for('stocklist'))[m[41m                                          [m
[32m+[m
[32m+[m
[32m+[m[32m@app.route('/login', methods=['GET', 'POST'])[m
[32m+[m[32mdef login():[m
[32m+[m[32m    db = utils.db_connect()[m
[32m+[m[32m    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        print "Logging in..."[m
[32m+[m[32m        loginUser = request.form['username'][m
[32m+[m[32m        pw = request.form['password'][m
[32m+[m[32m        query = "SELECT * FROM users WHERE username = '%s' AND password = SHA2('%s', 0)" % (loginUser, pw)[m
[32m+[m[32m        cur.execute(query)[m
[32m+[m[41m        [m
[32m+[m[32m        if cur.fetchone():[m
[32m+[m[32m            session['username'] = loginUser[m
[32m+[m[32m            pw = ''[m
[32m+[m[32m            return redirect(url_for('mainIndex'))[m
[32m+[m[32m        else:[m
[32m+[m[32m            error = 'Username and password do not match!'[m
[32m+[m[41m        [m
[32m+[m[32m        if 'username' in session:[m
[32m+[m[32m            return render_template('login.html', selectedMenu='Login', username=session['username'])[m
[32m+[m[32m        return render_template('login.html', selectedMenu='Login')[m
[32m+[m
[32m+[m[32m@app.route('/newUser', methods=['GET', 'POST'])[m
[32m+[m[32mdef newUser():[m
[32m+[m[32m    db = utils.db_connect()[m
[32m+[m[32m    cur = db.cursor(cursorclass=MySQLdb.cursors.DictCursor)[m
[32m+[m[32m    if request.method == 'POST':[m
[32m+[m[32m        print "Creating new user..."[m
[32m+[m[32m        session['username'] = request.form['username'][m
[32m+[m[32m        newPw = request.form['password'][m
[32m+[m[41m        [m
[32m+[m[32m        newQuery = "INSERT INTO users (username, password) VALUES('" + session['username'] + "', SHA2('" + newPw + "', 0))"[m
[32m+[m[32m        query = "SELECT * FROM users WHERE username = '%s' AND password = SHA2('%s', 0)" % (session['username'], newPw)[m
[32m+[m[32m        print newQuery[m
[32m+[m[32m        cur.execute(newQuery)[m
[32m+[m[32m        cur.execute(query)[m
[32m+[m[32m        if cur.fetchone():[m
[32m+[m[32m            return redirect(url_for('mainIndex'))[m
[32m+[m[41m    [m
[32m+[m[32m    if 'username' in session:[m
[32m+[m[32m        return render_template('newUser.html', selectedMenu='New User', username=session['username'])[m
[32m+[m[32m    return render_templage('newUser.html', selectedMenu='New User')[m
[32m+[m
[32m+[m[32m@app.route('/logout', methods=['GET', 'POST'])[m
[32m+[m[32mdef logout():[m
[32m+[m[32m    session.pop('username', None)[m
[32m+[m[32m    session.pop('zip', None)[m
[32m+[m[32m    print 'You were logged out'[m
[32m+[m[32m    return redirect(url_for('mainIndex'))[m
[32m+[m
[32m+[m[32mif __name__ == '__main__':[m
[32m+[m	[32mapp.debug==True[m
[32m+[m	[32mapp.run(host='0.0.0.0',port=3000)[m
